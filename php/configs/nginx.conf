# Worker processes
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
# pcre_jit on;

# PID
pid /run/nginx/nginx.pid;

# Event settings.
events {
    worker_connections  1024;
}

# HTTP settings.
http {
    # Include MIME types
    include /etc/nginx/mime.types;

    # default fastcgi settings.
    fastcgi_buffers             16 16k;
    fastcgi_buffer_size         32k;
    fastcgi_read_timeout        300;
    proxy_buffer_size           128k;
    proxy_buffers               4 256k;
    proxy_busy_buffers_size     256k;

    # no nginx version exposure.
    server_tokens off;

    # Default type when none detected
    default_type    application/octet-stream;

    # Max Upload Size
    client_max_body_size ${PHP_UPLOAD_MAX_FILESIZE};

    # Log format configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    '$request_time $upstream_response_time $pipe $upstream_cache_status';

    # Handle file descriptors at kernel level
    sendfile            on;

    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    # Keepalive settings
    keepalive_requests 100000;

    gzip on;
    gzip_static on;

    # currently enabled server.
    server {
        listen ${NGINX_LISTEN_PORT};
        index index.php index.html;
        root ${NGINX_ROOT};

        # access log file
        access_log  /dev/stdout main;
        error_log   /dev/stderr notice;

        # serve static files directly
        location ~* \.(jpg|jpeg|gif|css|png|js|ico|html)$ {
            access_log off;
            expires max;
            log_not_found off;
        }

        # removes trailing slashes (prevents SEO duplicate content issues)
        if (!-d $request_filename)
        {
            rewrite ^/(.+)/$ /$1 permanent;
        }

        # enforce NO www
        if ($host ~* ^www\.(.*))
        {
            set $host_without_www $1;
            rewrite ^/(.*)$ $scheme://$host_without_www/$1 permanent;
        }

        # unless the request is for a valid file (image, js, css, etc.), send to bootstrap
        if (!-e $request_filename)
        {
            rewrite ^/(.*)$ /index.php?/$1 last;
            break;
        }

        location / {
            try_files $uri $uri/ /index.php?$query_string;
        }

        # Pass the PHP scripts to PHP-FPM listening on 127.0.0.1:9000
        location ~* \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass 127.0.0.1:9000;
            fastcgi_hide_header X-Powered-By;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
        }

        # Deny access to . files, for security
        location ~ /\. {
            log_not_found off;
            deny all;
        }

        # Allow fpm ping and status from localhost
        location ~ ^/(fpm-status|ping)$ {
            access_log off;
            allow 127.0.0.1;
            deny all;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_pass 127.0.0.1:9000;
        }
    }
}
